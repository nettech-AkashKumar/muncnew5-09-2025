const mongoose = require("mongoose");

const invoiceSchema = new mongoose.Schema({
    sale: { type: mongoose.Schema.Types.ObjectId, ref: "Sales", required: true },
    customer: { type: mongoose.Schema.Types.ObjectId, ref: "Customer", required: true },
    // company: { type: mongoose.Schema.Types.ObjectId, ref: "companysetting" },
    products: [
        {
            productId: { type: mongoose.Schema.Types.ObjectId, ref: "Product", required: true },
            saleQty: { type: Number, default: 1 },
            sellingPrice: { type: Number, required: true },
            discount: { type: Number, default: 0 },
            tax: { type: Number, default: 0 },
        },
    ],
    billing: {
        name: String,
        address1: String,
        address2: String,
        city: String,
        state: String,
        country: String,
        postalCode: String,
    },
    shipping: {
        name: String,
        address1: String,
        address2: String,
        city: String,
        state: String,
        country: String,
        postalCode: String,
    },
    invoiceId: { type: String, unique: true, required: true },
    saleDate: { type: Date, required: true },
    dueDate: { type: Date },
    totalAmount: { type: Number },
    paidAmount: { type: Number, default: 0 },
    dueAmount: { type: Number, default: 0 },
    paymentType: { type: String },
    paymentStatus: { type: String },
    paymentMethod: { type: String },
    transactionId: { type: String },
    transactionDate: { type: Date },
    onlineMod: { type: String },
    cgst: { type: String },
    sgst: { type: String },
    orderTax: { type: Number, default: 0 },
    grandTotal: { type: Number, default: 0 },
    orderDiscount: { type: Number, default: 0 },
    roundOff: { type: Boolean, default: false },
    roundOffValue: { type: Number, default: 0 },
    shippingCost: { type: Number, default: 0 },
    notes: { type: String },
    description: { type: String },
    images: [{ type: String }],
}, { timestamps: true });

module.exports = mongoose.model("Invoice", invoiceSchema);
